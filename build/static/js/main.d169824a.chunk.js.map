{"version":3,"sources":["constants.js","components/TodoFooter.js","components/TodoInput.js","components/TodoItem.js","components/TodoItemList.js","components/TodoApp.js","App.js","localStorage.js","stores/todoStore.js","stores/viewStore.js","index.js"],"names":["COMPLETED","TODO_PROPERTY","KEY","FILTER","observer","todoFilter","changeTodoFilter","activeTodoCount","_setClassNameByFilter","origin","join","handleClick","event","filter","target","className","split","count","computed","get","onClick","TodoInput","addTodo","id","placeholder","autoFocus","onKeyDown","key","contents","value","trim","length","completed","toggleTodo","removeTodo","editTodoContent","useState","editText","setEditText","isEdit","setisEdit","type","checked","onChange","onDoubleClick","todoStore","todos","todo","map","inject","viewStore","App","TodoApp","TODOS","setTodo","toJson","JSON","stringify","localStorage","setItem","observable","ref","callback","makeObservable","this","getItem","parse","getTodos","action","Date","now","newFilter","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d169824a.chunk.js","sourcesContent":["const ENTER = 'Enter';\nconst ESCAPE = 'Escape';\nconst ESC = 'Esc';\nconst ALL = 'all';\nconst ACTIVE = 'active';\nconst COMPLETED = 'completed';\nconst CONTENTS = 'contents';\n\nconst TODO_PROPERTY = {\n  COMPLETED,\n  CONTENTS,\n};\n\nconst KEY = {\n  ENTER,\n  ESCAPE,\n  ESC,\n};\n\nconst FILTER = {\n  ALL,\n  ACTIVE,\n  COMPLETED,\n};\nexport { KEY, FILTER, TODO_PROPERTY };\n","import { computed } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { FILTER } from '../constants';\n\nconst TodoFooter = ({ todoFilter, changeTodoFilter, activeTodoCount }) => {\n  const _setClassNameByFilter = (origin) => {\n    return [origin, todoFilter === origin ? 'selected' : ''].join(' ');\n  };\n\n  const handleClick = (event) => {\n    const filter = event.target.className.split(' ')[0];\n    changeTodoFilter(filter);\n  };\n\n  const count = computed(() => activeTodoCount(todoFilter)).get();\n\n  return (\n    <div className=\"count-container\">\n      <span className=\"todo-count\">\n        총 <strong>{count}</strong> 개\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <span\n            className={_setClassNameByFilter(FILTER.ALL)}\n            onClick={handleClick}\n          >\n            전체보기\n          </span>\n        </li>\n        <li>\n          <span\n            className={_setClassNameByFilter(FILTER.ACTIVE)}\n            onClick={handleClick}\n          >\n            해야할 일\n          </span>\n        </li>\n        <li>\n          <span\n            className={_setClassNameByFilter(FILTER.COMPLETED)}\n            onClick={handleClick}\n          >\n            완료한 일\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default observer(TodoFooter);\n","import { KEY } from '../constants';\n\nconst TodoInput = ({ addTodo }) => {\n  const handleKeyDown = ({ key, target }) => {\n    if (key === KEY.ENTER) {\n      const contents = target.value.trim();\n\n      if (contents.length > 0) {\n        addTodo(contents);\n      }\n\n      target.value = '';\n    }\n  };\n\n  return (\n    <input\n      id=\"new-todo-title\"\n      className=\"new-todo\"\n      placeholder=\"할일을 추가해주세요\"\n      autoFocus\n      onKeyDown={handleKeyDown}\n    />\n  );\n};\n\nexport default TodoInput;\n","import { observer } from 'mobx-react';\nimport { useState } from 'react';\nimport { KEY } from '../constants';\n\nconst TodoItem = ({\n  id,\n  contents,\n  completed,\n  toggleTodo,\n  removeTodo,\n  editTodoContent,\n}) => {\n  const [editText, setEditText] = useState(contents);\n  const [isEdit, setisEdit] = useState(false);\n\n  const handleToggle = () => {\n    toggleTodo(id);\n  };\n  const handleClick = () => {\n    removeTodo(id);\n  };\n\n  const handleChange = (event) => {\n    setEditText(event.target.value);\n  };\n  const handleDblClick = () => {\n    setisEdit(true);\n  };\n\n  const handleKeyDown = ({ key, target }) => {\n    if (key === KEY.ENTER) {\n      editTodoContent(id, target.value);\n      return setisEdit(false);\n    }\n\n    if (key === KEY.ESC || key === KEY.ESCAPE) {\n      return setisEdit(false);\n    }\n  };\n\n  return (\n    <li\n      className={[completed ? 'completed' : '', isEdit ? 'editing' : ''].join(\n        ' '\n      )}\n    >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={handleToggle}\n        />\n        <label className=\"label\" onDoubleClick={handleDblClick}>\n          {contents}\n        </label>\n        <button className=\"destroy\" onClick={handleClick}></button>\n      </div>\n      <input\n        className=\"edit\"\n        value={editText}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </li>\n  );\n};\n\nexport default observer(TodoItem);\n","import { observer } from 'mobx-react';\nimport { FILTER } from '../constants';\nimport TodoItem from './TodoItem';\n\nconst TodoItemList = ({ todoStore, todoFilter }) => {\n  const { todos, removeTodo, toggleTodo, editTodoContent } = todoStore;\n\n  const getVisibleTodos = () =>\n    todos.filter(\n      (todo) =>\n        ({\n          [FILTER.ACTIVE]: !todo.completed,\n          [FILTER.COMPLETED]: todo.completed,\n          [FILTER.ALL]: true,\n        }[todoFilter])\n    );\n\n  return (\n    <ul id=\"todo-list\" className=\"todo-list\">\n      {getVisibleTodos().map((todo) => (\n        <TodoItem\n          key={todo.id}\n          {...todo}\n          removeTodo={removeTodo}\n          toggleTodo={toggleTodo}\n          editTodoContent={editTodoContent}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default observer(TodoItemList);\n","import { inject, observer } from 'mobx-react';\nimport TodoFooter from './TodoFooter';\nimport TodoInput from './TodoInput';\nimport TodoItemList from './TodoItemList';\n\nconst todoApp = ({ todoStore, viewStore }) => {\n  const { addTodo, activeTodoCount } = todoStore;\n  const { todoFilter, changeTodoFilter } = viewStore;\n\n  return (\n    <div className=\"todoapp\">\n      <h1>TODOS</h1>\n      <TodoInput addTodo={addTodo} />\n      <main>\n        <TodoItemList todoStore={todoStore} todoFilter={todoFilter} />\n        <TodoFooter\n          activeTodoCount={activeTodoCount}\n          todoFilter={todoFilter}\n          changeTodoFilter={changeTodoFilter}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default inject('todoStore', 'viewStore')(observer(todoApp));\n","import TodoApp from './components/TodoApp';\n\nfunction App() {\n  return <TodoApp />;\n}\n\nexport default App;\n","const TODOS = 'todos';\n\nconst getTodos = () => {\n  const value = localStorage.getItem(TODOS);\n\n  return JSON.parse(value) ?? [];\n};\n\nconst setTodo = (value) => {\n  if (!value) return;\n\n  const toJson = JSON.stringify(value);\n\n  localStorage.setItem(TODOS, toJson);\n};\n\nexport { getTodos, setTodo };\n","import { action, makeObservable, observable } from 'mobx';\nimport { FILTER, TODO_PROPERTY } from '../constants';\nimport { getTodos, setTodo } from '../localStorage';\n\nclass todoStore {\n  @observable.ref\n  todos = getTodos();\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  addTodo = (contents) => {\n    this.todos = [\n      ...this.todos,\n      { id: Date.now(), contents, completed: false },\n    ];\n    setTodo(this.todos);\n  };\n\n  @action\n  editTodoContent = (id, contents) => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        todo[TODO_PROPERTY.CONTENTS] = contents;\n      }\n      return todo;\n    });\n    setTodo(this.todos);\n  };\n\n  @action\n  toggleTodo = (id) => {\n    this.todos = this.todos.map((todo) => {\n      if (todo.id === id) {\n        todo[TODO_PROPERTY.COMPLETED] = !todo[TODO_PROPERTY.COMPLETED];\n      }\n      return todo;\n    });\n    setTodo(this.todos);\n  };\n\n  @action\n  removeTodo = (id) => {\n    this.todos = this.todos.filter((todo) => todo.id !== id);\n    setTodo(this.todos);\n  };\n\n  activeTodoCount = (todoFilter) => {\n    const _filterCompleted = () => this.todos.filter((todo) => todo.completed);\n    const _filterActive = () => this.todos.filter((todo) => !todo.completed);\n\n    const callback = {\n      [FILTER.COMPLETED]: _filterCompleted,\n      [FILTER.ACTIVE]: _filterActive,\n    }[todoFilter];\n\n    if (!callback) return this.todos.length;\n    return callback().length;\n  };\n}\n\nexport default new todoStore();\n","import { action, makeObservable, observable } from 'mobx';\nimport { FILTER } from '../constants';\n\nclass viewStore {\n  @observable.ref todoFilter = FILTER.ALL;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  changeTodoFilter = (newFilter) => {\n    this.todoFilter = newFilter;\n  };\n}\n\nexport default new viewStore();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react';\nimport * as store from './stores';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}